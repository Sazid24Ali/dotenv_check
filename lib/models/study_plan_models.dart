// lib/models/study_plan_models.dart
import 'package:json_annotation/json_annotation.dart';
import 'syllabus_analyzer_models.dart'; // Import existing models (Topic, Unit etc.)

part 'study_plan_models.g.dart'; // This file will be generated by build_runner

@JsonSerializable(explicitToJson: true)
class StudyPlan {
  final String planTitle;
  final int totalAllocatedTimeMinutesUserCommitment;
  final DateTime deadline;
  final List<StudySession> sessions;
  final int totalRevisionTimeMinutes;
  
  @JsonKey(defaultValue: [])
  final List<Topic> uncoveredTopics;

  StudyPlan({
    required this.planTitle,
    required this.totalAllocatedTimeMinutesUserCommitment,
    required this.deadline,
    required this.sessions,
    required this.totalRevisionTimeMinutes,
    this.uncoveredTopics = const [],
  });

  factory StudyPlan.fromJson(Map<String, dynamic> json) => _$StudyPlanFromJson(json);
  Map<String, dynamic> toJson() => _$StudyPlanToJson(this);
}

@JsonSerializable(explicitToJson: true)
class StudySession {
  final String unitName; // Name of the parent unit (or 'Revision' or 'Break')
  final Topic? topic; // The topic/subtopic to study (nullable for revision/break sessions)
  final int allocatedTimeMinutes; // Time allocated to this specific session
  final DateTime? scheduledDate; // Date this session is planned for
  final bool isRevision; // Flag to indicate if this is a revision session
  final bool isBreak; // Flag to indicate if this is a break session
  String? scheduledStartTime; // FIX: Make scheduledStartTime mutable

  StudySession({
    required this.unitName,
    this.topic,
    required this.allocatedTimeMinutes,
    this.scheduledDate,
    this.isRevision = false,
    this.isBreak = false,
    this.scheduledStartTime, // Initialize new field
  });

  // Add a copyWith method for easier mutation in stateful widgets
  StudySession copyWith({
    String? unitName,
    Topic? topic,
    int? allocatedTimeMinutes,
    DateTime? scheduledDate,
    bool? isRevision,
    bool? isBreak,
    String? scheduledStartTime,
  }) {
    return StudySession(
      unitName: unitName ?? this.unitName,
      topic: topic ?? this.topic,
      allocatedTimeMinutes: allocatedTimeMinutes ?? this.allocatedTimeMinutes,
      scheduledDate: scheduledDate ?? this.scheduledDate,
      isRevision: isRevision ?? this.isRevision,
      isBreak: isBreak ?? this.isBreak,
      scheduledStartTime: scheduledStartTime ?? this.scheduledStartTime,
    );
  }

  factory StudySession.fromJson(Map<String, dynamic> json) => _$StudySessionFromJson(json);
  Map<String, dynamic> toJson() => _$StudySessionToJson(this);
}